function [out,handle]=fn_corner_position_calib(img,meters_per_pixel)%   fn_corner_position_calib% %       function to determine corners of recording environment %       form: [out]=position_calib(img,meters_per_pixel)%           manual calcution based on mouse input%       form: [out]=fn_corner_position_calib(img,meters_per_pixel)%%   Variables:%%       img = the image of the setup with the microphones visible%       meters_2_pixels = conversion factor that can be used for  going %           from pixels to meters%%   OUTPUT (out) is a length(# mics) struct with fields:% %       x_m (x position of mic in meters)%       y_m (y position of mic in meters)%       x/y_pix (position in pixels)%%   upper lefthand corner is 0,0 (above and to left of image)%%   assumes there are four microphones arranged in a square% plot the imagefn_FigureTrackFrame_jpn(img,6);handle = gcf;colormap(gray)set(gca,'dataaspectratio',[1 1 1])axis xy% extract the four corners of the box (known dimensions) to calculate meter_per_pixel[new(1:4).x_pix]=deal([]);for i=1:4    switch isnumeric(i)        case i == 1            %modifed on 11/1/12 by jpn%             position_label = 'upper left';            position_label = 'upper right';        case i == 2%             position_label = 'upper right';            position_label = 'upper left';        case i == 3%             position_label = 'lower right';            position_label = 'lower left';        case i == 4%             position_label = 'lower left';            position_label = 'lower right';    end    label = sprintf('measure %s corner',position_label);    clc    disp(label);    [new(i).x_pix,new(i).y_pix]=get_pos;    disp(['     x = ' num2str(new(i).x_pix) ' y = ' num2str(new(i).y_pix)])    new(i).x_m=new(i).x_pix*meters_per_pixel;    new(i).y_m=new(i).y_pix*meters_per_pixel;end;out = new;%--------------------------------------------------------------------------% sub-function to get position from an image%--------------------------------------------------------------------------function [x,y]=get_poscur_pos=ginput(1);x=cur_pos(1,1);y=cur_pos(1,2);