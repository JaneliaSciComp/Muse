function [out,handle]=fn_position_calib(img,meters_per_pixel)%   fn_position_calib% %       function to determine microphone positions in recording environment%           manual calcution based on mouse input%           type in heights of microphones based on measurements%       form: [out]=fn_position_calib(img,meters_per_pixel)%%   Variables:%%       img = the image of the setup with the microphones visible%       meters_2_pixels = conversion factor that can be used for  going %           from pixels to meters%%   OUTPUT (out) is a length(# mics) struct with fields:% %       x_m (x position of mic in meters)%       y_m (y position of mic in meters)%       x/y_pix (position in pixels)%%   upper lefthand corner is 0,0 (above and to left of image)%%   assumes there are four microphones arranged in a square% plot the imagefn_FigureTrackFrame_jpn(img,6);handle = gcf;colormap(gray)set(gca,'dataaspectratio',[1 1 1])%%%%changed on 10/29/2012 by jpnaxis xy% extract the x,y positions of the four microphones and convert to meters[out(1:4).x_pix]=deal([]);for i=1:4    switch isnumeric(i)        case i == 1%             position_label = 'upper left'; %%%%changed on 10/29/2012 by jpn            position_label = 'top';        case i == 2%             position_label = 'upper right'; %%%%changed on 10/29/2012 by jpn            position_label = 'left';        case i == 3%             position_label = 'lower right';%%%%changed on 10/29/2012 by jpn            position_label = 'bottom';        case i == 4%             position_label = 'lower left'; %%%%changed on 10/29/2012 by jpn            position_label = 'right';    end    label = sprintf('measure microphone on %s side of box (ch%d)',position_label,i);    clc    disp(label);    [out(i).x_pix,out(i).y_pix]=get_pos;    disp(['     x = ' num2str(out(i).x_pix) ' y = ' num2str(out(i).y_pix)])    out(i).x_m=out(i).x_pix*meters_per_pixel;    out(i).y_m=out(i).y_pix*meters_per_pixel;end;% input microphone z-values and converts to metersfor i=1:4    tmp=input(['height of microphone ' num2str(i) ' (in inches): ']);    out(i).z_m= tmp*0.0254; %0.0254 conversion factor for inches --> metersend;%--------------------------------------------------------------------------% sub-function to get position from an image%--------------------------------------------------------------------------function [x,y]=get_poscur_pos=ginput(1);x=cur_pos(1,1);y=cur_pos(1,2);