function h=mouse_body_alt(axes_h,de,z,do_draw_center,varargin)% Draw a stylized mouse body.% de a "directed ellipse", a 5x1 vector with elements x, y, a, b, theta, in% that order. theta points in the center-to-head direction.  a is half the% length of the axis parallel to theta (i.e. it's like the semi-major axis% length).  b is half the length of the axis perpendicular to theta (i.e.% it's like the semi-minor axis length).% h is a vector of handles of the drawn lines% We assume all the coords and angles are in the traditional cartesian% coordinate system.% use varagin to pass optional args to the line() functions used to draw% the linesif ~exist('z','var') || isempty(z) ,  z=0;endif ~exist('do_draw_center','var') || isempty(do_draw_center) ,  do_draw_center=false;end% unpack direllipsex=de(1);y=de(2);a=de(3);b=de(4);theta=de(5);%% form: mouse_body(x,y,a,b,cx,cy,c1)% % x,y are the x and y coordinate for the centroid of the ellipse% a,b are the major and minor axis diameters of the ellipse% cx,cy are the length of the x and y lines of the center cross% c1 is the color and linestyle for the whole plot; accepts rgb or letter% string (i.e., 'r')% lw is linewidth%%% determine coords for mouse shape, without shifting or rotationphi=linspace(pi,2*pi,40);r_semicircle_raw(2,:)=(cos(phi)*b);x_center_semicircle_raw=-(a-b);r_semicircle_raw(1,:)=(sin(phi)*b)+x_center_semicircle_raw;r_right_line_raw(2,:)=[-b 0];r_right_line_raw(1,:)=[0 (2*a)-b]+x_center_semicircle_raw;r_left_line_raw(2,:)=[0 b];r_left_line_raw(1,:)=[(2*a)-b 0]+x_center_semicircle_raw;r_cross_midsaggital_raw=[ 0     0    ;                          -b/3  +b/3 ];r_cross_coronal_raw=[ -b/3  +b/3 ;                       0     0    ];                    % rotate the position vectorsA=[cos(theta) -sin(theta) ; ...   sin(theta)  cos(theta) ];r_semicircle_roted=A*r_semicircle_raw;r_right_line_roted=A*r_right_line_raw;r_left_line_roted=A*r_left_line_raw;r_cross_midsaggital_roted=A*r_cross_midsaggital_raw;r_cross_coronal_roted=A*r_cross_coronal_raw;% shift the position vectorsr_semicircle=bsxfun(@plus,[x;y],r_semicircle_roted);r_right_line=bsxfun(@plus,[x;y],r_right_line_roted);r_left_line=bsxfun(@plus,[x;y],r_left_line_roted);r_cross_midsaggital=bsxfun(@plus,[x;y],r_cross_midsaggital_roted);r_cross_coronal=bsxfun(@plus,[x;y],r_cross_coronal_roted);% tack on z coordr_semicircle(3,:)=z;r_right_line(3,:)=z;r_left_line(3,:)=z;r_cross_midsaggital(3,:)=z;r_cross_coronal(3,:)=z;% drawh(1,1)=line('parent',axes_h, ...          'xdata',r_semicircle(1,:), ...          'ydata',r_semicircle(2,:), ...          'zdata',r_semicircle(3,:), ...          varargin{:});h(2,1)=line('parent',axes_h, ...          'xdata',r_right_line(1,:), ...          'ydata',r_right_line(2,:), ...          'zdata',r_right_line(3,:), ...          varargin{:});h(3,1)=line('parent',axes_h, ...          'xdata',r_left_line(1,:), ...          'ydata',r_left_line(2,:), ...          'zdata',r_left_line(3,:), ...          varargin{:});if do_draw_center ,          h(4,1)=line('parent',axes_h, ...            'xdata',r_cross_midsaggital(1,:), ...            'ydata',r_cross_midsaggital(2,:), ...            'zdata',r_cross_midsaggital(3,:), ...            varargin{:});  h(5,1)=line('parent',axes_h, ...            'xdata',r_cross_coronal(1,:), ...            'ydata',r_cross_coronal(2,:), ...            'zdata',r_cross_coronal(3,:), ...            varargin{:});endend